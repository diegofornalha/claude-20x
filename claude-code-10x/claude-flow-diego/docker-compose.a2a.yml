version: '3.8'

services:
  # A2A Server Principal
  a2a-server:
    build: .
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - A2A_MODE=server
      - MCP_INTEGRATION=enabled
      - GUARDIAN_MONITORING=enabled
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    restart: unless-stopped
    networks:
      - a2a-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MCP Server - Memory
  mcp-memory:
    image: python:3.11-slim
    command: |
      sh -c "
        pip install uvicorn fastapi mem0ai &&
        uvicorn mcp_server_memory.server:app --host 0.0.0.0 --port 3001
      "
    ports:
      - "3001:3001"
    environment:
      - A2A_ENABLED=true
      - A2A_BRIDGE_URL=http://a2a-server:8080
      - MEMORY_BACKEND=mem0
    volumes:
      - ./mcp_servers/memory:/app
      - ./data/memory:/app/data
    restart: unless-stopped
    networks:
      - a2a-network
    depends_on:
      - a2a-server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MCP Server - Sequential Thinking
  mcp-sequential-thinking:
    image: node:18-alpine
    working_dir: /app
    command: |
      sh -c "
        npm install @modelcontextprotocol/server-sequential-thinking &&
        node node_modules/@modelcontextprotocol/server-sequential-thinking/dist/index.js
      "
    ports:
      - "3002:3002"
    environment:
      - A2A_ENABLED=true
      - A2A_BRIDGE_URL=http://a2a-server:8080
      - MCP_PORT=3002
    volumes:
      - ./data/thinking:/app/data
    restart: unless-stopped
    networks:
      - a2a-network
    depends_on:
      - a2a-server

  # MCP Server - Desktop Commander
  mcp-desktop-commander:
    image: node:18-alpine
    working_dir: /app
    command: |
      sh -c "
        npm install @modelcontextprotocol/server-desktop-commander &&
        npx @modelcontextprotocol/server-desktop-commander
      "
    ports:
      - "3003:3003"
    environment:
      - A2A_ENABLED=true
      - A2A_BRIDGE_URL=http://a2a-server:8080
      - MCP_PORT=3003
    volumes:
      - ./data/desktop:/app/data
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
    networks:
      - a2a-network
    depends_on:
      - a2a-server

  # MCP Server - Terminal
  mcp-terminal:
    image: node:18-alpine
    working_dir: /app
    command: |
      sh -c "
        npm install @modelcontextprotocol/server-terminal &&
        npx @modelcontextprotocol/server-terminal
      "
    ports:
      - "3004:3004"
    environment:
      - A2A_ENABLED=true
      - A2A_BRIDGE_URL=http://a2a-server:8080
      - MCP_PORT=3004
    volumes:
      - ./data/terminal:/app/data
    restart: unless-stopped
    networks:
      - a2a-network
    depends_on:
      - a2a-server

  # Guardian Universal com Monitoramento A2A
  guardian-a2a:
    build: .
    command: node -r ts-node/register src/agents/universal-organization-guardian.ts /app continuous
    environment:
      - GUARDIAN_MODE=continuous
      - GUARDIAN_A2A_MONITORING=enabled
      - GUARDIAN_AUTO_FIX=true
      - MEM0_BRIDGE_URL=http://mcp-memory:3001
      - A2A_SERVER_URL=http://a2a-server:8080
    volumes:
      - ./:/app
      - ./logs:/app/logs
      - ./data/guardian:/app/data
    restart: unless-stopped
    networks:
      - a2a-network
    depends_on:
      - a2a-server
      - mcp-memory

  # Prometheus para MÃ©tricas
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    restart: unless-stopped
    networks:
      - a2a-network

  # Grafana para Dashboards
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    restart: unless-stopped
    networks:
      - a2a-network
    depends_on:
      - prometheus

networks:
  a2a-network:
    driver: bridge
    name: a2a-ecosystem

volumes:
  prometheus_data:
  grafana_data: