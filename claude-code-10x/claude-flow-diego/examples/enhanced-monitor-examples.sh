#!/bin/bash

# üìä Enhanced Monitor - Exemplos Pr√°ticos
# ======================================

echo "üöÄ CLAUDE FLOW - ENHANCED MONITOR - EXEMPLOS PR√ÅTICOS"
echo "======================================================"

# ====================================================
# EXEMPLO 1: MONITORAMENTO B√ÅSICO
# ====================================================
echo ""
echo "üìã EXEMPLO 1: Monitoramento B√°sico (Portainer)"
echo "----------------------------------------------"
echo "üéØ Objetivo: Monitorar containers Docker via interface web"
echo ""
echo "Comandos:"
echo "  docker-compose --profile monitor up -d"
echo "  # Acesse: http://localhost:9000"
echo ""
echo "O que voc√™ ver√°:"
echo "  ‚Ä¢ Lista de containers ativos"
echo "  ‚Ä¢ Logs em tempo real"
echo "  ‚Ä¢ Estat√≠sticas de CPU/RAM"
echo "  ‚Ä¢ Gerenciamento de volumes"
echo ""

# ====================================================
# EXEMPLO 2: ANALYTICS COMPLETO
# ====================================================
echo "üìã EXEMPLO 2: Analytics Completo (Dashboard Flask)"
echo "------------------------------------------------"
echo "üéØ Objetivo: Monitorar m√©tricas e dados reais dos agentes"
echo ""
echo "Comandos:"
echo "  docker-compose --profile flask up -d"
echo "  # Acesse: http://localhost:5001"
echo ""
echo "O que voc√™ ver√°:"
echo "  ‚Ä¢ Agentes ativos em tempo real"
echo "  ‚Ä¢ Estat√≠sticas de execu√ß√£o"
echo "  ‚Ä¢ Taxa de sucesso por agente"
echo "  ‚Ä¢ Relat√≥rios de pipeline"
echo ""

# ====================================================
# EXEMPLO 3: MONITORAMENTO COMPLETO
# ====================================================
echo "üìã EXEMPLO 3: Stack Completo (Tudo Ligado)"
echo "----------------------------------------"
echo "üéØ Objetivo: Monitoramento completo com todas as funcionalidades"
echo ""
echo "Comandos:"
echo "  docker-compose --profile full --profile monitor --profile flask --profile dashboard up -d"
echo ""
echo "Interfaces dispon√≠veis:"
echo "  ‚Ä¢ Portainer: http://localhost:9000"
echo "  ‚Ä¢ Dashboard Flask: http://localhost:5001"
echo "  ‚Ä¢ Agent Log API: http://localhost:3001"
echo "  ‚Ä¢ Terminal Dashboard: docker logs -f claude-flow-dashboard"
echo ""

# ====================================================
# EXEMPLO 4: USANDO A API
# ====================================================
echo "üìã EXEMPLO 4: Usando a Agent Log API"
echo "----------------------------------"
echo "üéØ Objetivo: Acessar dados via API REST"
echo ""
echo "1. Iniciar o servi√ßo:"
echo "   docker-compose --profile analytics up -d"
echo ""
echo "2. Testar endpoints:"
echo "   # Status do servi√ßo"
echo "   curl http://localhost:3001/health"
echo ""
echo "   # Estat√≠sticas gerais"
echo "   curl http://localhost:3001/api/stats"
echo ""
echo "   # Execu√ß√µes recentes"
echo "   curl http://localhost:3001/api/executions"
echo ""
echo "   # Relat√≥rio do pipeline"
echo "   curl http://localhost:3001/api/pipeline-report"
echo ""
echo "   # Agentes Docker"
echo "   curl http://localhost:3001/api/docker-agents"
echo ""

# ====================================================
# EXEMPLO 5: MONITORAMENTO EM DESENVOLVIMENTO
# ====================================================
echo "üìã EXEMPLO 5: Monitoramento para Desenvolvimento"
echo "-----------------------------------------------"
echo "üéØ Objetivo: Monitor leve durante desenvolvimento"
echo ""
echo "Comandos:"
echo "  # S√≥ o terminal dashboard"
echo "  docker-compose --profile dashboard up -d"
echo "  docker logs -f claude-flow-dashboard"
echo ""
echo "  # Ou monitor b√°sico"
echo "  docker-compose --profile monitor up -d"
echo ""
echo "Uso:"
echo "  ‚Ä¢ Verificar rapidamente se os agentes est√£o rodando"
echo "  ‚Ä¢ Ver logs b√°sicos"
echo "  ‚Ä¢ Monitorar commits git"
echo ""

# ====================================================
# EXEMPLO 6: TROUBLESHOOTING
# ====================================================
echo "üìã EXEMPLO 6: Troubleshooting com Enhanced Monitor"
echo "------------------------------------------------"
echo "üéØ Objetivo: Diagnosticar problemas usando o monitor"
echo ""
echo "Cen√°rio: Agente n√£o est√° funcionando"
echo ""
echo "1. Verificar containers:"
echo "   docker-compose ps"
echo ""
echo "2. Verificar logs via Portainer:"
echo "   # Acesse http://localhost:9000"
echo "   # Containers > [nome-do-agente] > Logs"
echo ""
echo "3. Verificar m√©tricas via Dashboard:"
echo "   # Acesse http://localhost:5001"
echo "   # Verifique taxa de erro, √∫ltima execu√ß√£o"
echo ""
echo "4. Verificar API para dados espec√≠ficos:"
echo "   curl http://localhost:3001/api/agent/Guardian-Agent"
echo ""

# ====================================================
# EXEMPLO 7: INTEGRA√á√ÉO COM MEM0
# ====================================================
echo "üìã EXEMPLO 7: Monitoramento com Mem0 (Dados Reais)"
echo "------------------------------------------------"
echo "üéØ Objetivo: Usar dados reais do Mem0 para monitoramento"
echo ""
echo "Pr√©-requisitos:"
echo "  export MEM0_API_KEY=m0-sua-chave-aqui"
echo ""
echo "Comandos:"
echo "  # Iniciar com Mem0"
echo "  docker-compose --profile flask up -d"
echo ""
echo "  # Verificar conex√£o"
echo "  curl http://localhost:5001/health"
echo ""
echo "Dados dispon√≠veis:"
echo "  ‚Ä¢ Logs reais de execu√ß√£o dos agentes"
echo "  ‚Ä¢ Hist√≥rico de tarefas"
echo "  ‚Ä¢ M√©tricas de performance"
echo "  ‚Ä¢ Erros e debugging"
echo ""

# ====================================================
# EXEMPLO 8: MONITORAMENTO DE PRODU√á√ÉO
# ====================================================
echo "üìã EXEMPLO 8: Monitoramento de Produ√ß√£o"
echo "-------------------------------------"
echo "üéØ Objetivo: Configurar monitoramento para ambiente de produ√ß√£o"
echo ""
echo "Comandos:"
echo "  # Stack completo em produ√ß√£o"
echo "  docker-compose --profile full --profile monitor --profile flask up -d"
echo ""
echo "  # Verificar se tudo est√° rodando"
echo "  docker-compose ps"
echo ""
echo "  # Verificar sa√∫de dos servi√ßos"
echo "  curl http://localhost:9000/  # Portainer"
echo "  curl http://localhost:5001/health  # Dashboard Flask"
echo "  curl http://localhost:3001/health  # Agent Log API"
echo ""
echo "Monitoramento cont√≠nuo:"
echo "  ‚Ä¢ Portainer para gest√£o visual"
echo "  ‚Ä¢ Dashboard Flask para m√©tricas"
echo "  ‚Ä¢ Agent Log API para automa√ß√£o"
echo "  ‚Ä¢ Alertas baseados em thresholds"
echo ""

# ====================================================
# COMANDOS √öTEIS
# ====================================================
echo "üìã COMANDOS √öTEIS PARA ENHANCED MONITOR"
echo "======================================="
echo ""
echo "Ver status:"
echo "  docker-compose ps"
echo ""
echo "Ver logs espec√≠ficos:"
echo "  docker logs -f portainer"
echo "  docker logs -f agent-log-flask"
echo "  docker logs -f agent-log-service"
echo "  docker logs -f claude-flow-dashboard"
echo ""
echo "Reiniciar servi√ßos:"
echo "  docker-compose restart portainer"
echo "  docker-compose restart agent-log-flask"
echo ""
echo "Parar monitoramento:"
echo "  docker-compose --profile monitor down"
echo "  docker-compose --profile flask down"
echo ""
echo "Limpar dados (cuidado!):"
echo "  docker-compose down -v"
echo ""

# ====================================================
# CEN√ÅRIOS DE USO
# ====================================================
echo "üìã CEN√ÅRIOS DE USO DO ENHANCED MONITOR"
echo "======================================"
echo ""
echo "üîß Para Desenvolvedores:"
echo "  ‚Ä¢ Debug: Portainer para logs detalhados"
echo "  ‚Ä¢ Performance: Dashboard Flask para m√©tricas"
echo "  ‚Ä¢ Desenvolvimento: Terminal dashboard para status r√°pido"
echo ""
echo "üè≠ Para Opera√ß√µes:"
echo "  ‚Ä¢ Monitoramento: Portainer para gest√£o visual"
echo "  ‚Ä¢ Alertas: Dashboard Flask com dados reais"
echo "  ‚Ä¢ Automa√ß√£o: Agent Log API para scripts"
echo ""
echo "üìä Para An√°lise:"
echo "  ‚Ä¢ Relat√≥rios: API para dados estruturados"
echo "  ‚Ä¢ Tend√™ncias: Dashboard Flask para visualiza√ß√£o"
echo "  ‚Ä¢ Hist√≥rico: Dados persistentes no Mem0"
echo ""

echo "üéØ ENHANCED MONITOR CONFIGURADO COM SUCESSO!"
echo "============================================"
echo ""
echo "Pr√≥ximos passos:"
echo "1. Escolha um dos exemplos acima"
echo "2. Execute os comandos correspondentes"
echo "3. Acesse as interfaces web"
echo "4. Explore os dados e funcionalidades"
echo ""
echo "üìö Documenta√ß√£o completa: docs/ENHANCED-MONITOR-GUIDE.md" 